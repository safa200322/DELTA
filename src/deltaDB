CREATE DATABASE VehicleRentalDB;
USE VehicleRentalDB;

CREATE TABLE User (
    UserID INT AUTO_INCREMENT PRIMARY KEY,
    Name VARCHAR(100) NOT NULL,
    PhoneNumber VARCHAR(15) NOT NULL UNIQUE, 
    Email VARCHAR(150) UNIQUE, -- Optional
    Date_of_birth DATE,
    Password VARCHAR(255) NOT NULL,
    NationalID VARCHAR(20) UNIQUE, 
    PassportNumber VARCHAR(20) UNIQUE, 
    -- Constraint to enforce at least one of NationalID or PassportNumber must be provided
    CHECK (
        (NationalID IS NOT NULL AND PassportNumber IS NULL) OR 
        (PassportNumber IS NOT NULL AND NationalID IS NULL)
    )
);


CREATE TABLE Admin (
    AdminID INT AUTO_INCREMENT PRIMARY KEY,
    Name VARCHAR(100) NOT NULL,
    PhoneNumber VARCHAR(15) NOT NULL UNIQUE,
  
  Email VARCHAR(150) NOT NULL UNIQUE,
    Password VARCHAR(255) NOT NULL
);
CREATE TABLE Chauffeur (
    ChauffeurID INT AUTO_INCREMENT PRIMARY KEY,
    Name VARCHAR(100) NOT NULL,
    Gender ENUM('Male', 'Female') NOT NULL, 
    PhoneNumber VARCHAR(15) NOT NULL UNIQUE,
    Email VARCHAR(150) NOT NULL UNIQUE,
    Date_of_birth DATE NOT NULL,
    LicenseNumber VARCHAR(50) NOT NULL UNIQUE,
    Availability ENUM('Available', 'Unavailable') NOT NULL DEFAULT 'Available',
    Location VARCHAR(100) NOT NULL,
    Status ENUM('Pending', 'Approved', 'Rejected') NOT NULL DEFAULT 'Pending',
    VehicleID INT NULL,  -- Assigned vehicle (NULL if not assigned yet)
    FOREIGN KEY (VehicleID) REFERENCES Vehicle(VehicleID) ON DELETE SET NULL
);


CREATE TABLE Locations (
    LocationID INT AUTO_INCREMENT PRIMARY KEY,
    City VARCHAR(100) NOT NULL,
    District VARCHAR(100),
    PlaceName VARCHAR(150)  -- Optional (e.g., "Ercan Airport")
);


CREATE TABLE Vehicle (
    VehicleID INT AUTO_INCREMENT PRIMARY KEY,
    Type ENUM('Car', 'boats', 'Bicycle', 'Motorcycle') NOT NULL,
    Status ENUM('Available', 'Rented', 'Maintenance') NOT NULL DEFAULT 'Available',
    Location VARCHAR(100) NOT NULL,
    Price INT NOT NULL **
);


CREATE TABLE Car (
    VehicleID INT PRIMARY KEY,
    Brand VARCHAR(50) NOT NULL,
    Model VARCHAR(50) NOT NULL,
    Year INT NOT NULL,
    FuelType ENUM('Petrol', 'Diesel', 'Electric', 'Hybrid') NOT NULL,
    Seats INT NOT NULL,
    FOREIGN KEY (VehicleID) REFERENCES Vehicle(VehicleID) ON DELETE CASCADE
);



CREATE TABLE Boats (
    VehicleID INT PRIMARY KEY,
    Length FLOAT NOT NULL,  
    Capacity INT NOT NULL,  
    EngineType ENUM('Inboard', 'Outboard', 'Sail') NOT NULL,
    FOREIGN KEY (VehicleID) REFERENCES Vehicle(VehicleID) ON DELETE CASCADE
);


CREATE TABLE Bicycle (
    VehicleID INT PRIMARY KEY,
    Type ENUM('Road', 'Mountain', 'Hybrid', 'Electric') NOT NULL,
    Gears INT NOT NULL,
    FOREIGN KEY (VehicleID) REFERENCES Vehicle(VehicleID) ON DELETE CASCADE
);

CREATE TABLE Motorcycle (
    VehicleID INT PRIMARY KEY,
    Brand VARCHAR(50) NOT NULL,
    EngineCC INT NOT NULL,  
    Year INT NOT NULL,
    Type ENUM('Sport', 'Cruiser', 'Touring', 'Standard') NOT NULL,
    FOREIGN KEY (VehicleID) REFERENCES Vehicle(VehicleID) ON DELETE CASCADE
);


CREATE TABLE VehicleOwner (
    OwnerID INT AUTO_INCREMENT PRIMARY KEY,
    TotalEarnings DECIMAL(12,2) DEFAULT 0.00,
    Availability ENUM('Available', 'Unavailable') DEFAULT 'Available'
);



CREATE TABLE Maintenance (
    MaintenanceID INT AUTO_INCREMENT PRIMARY KEY,
    VehicleID INT,
    maintenance_info VARCHAR(500),
    PlannedDate DATE,
    Status ENUM( 'In Progress', 'Completed') DEFAULT 'Completed',
    FOREIGN KEY (VehicleID) REFERENCES Vehicle(VehicleID)
);


CREATE TABLE Accessory (
    AccessoryID INT AUTO_INCREMENT PRIMARY KEY,
    VehicleType VARCHAR(50) NOT NULL,
    Quantity INT NOT NULL,
    Price FLOAT NOT NULL
);


CREATE TABLE Reservation (
    ReservationID INT AUTO_INCREMENT PRIMARY KEY,
    UserID INT,
    VehicleID INT,
    LicenseID VARCHAR(50) UNIQUE,
    ChauffeurID INT,
    StartDate DATETIME NOT NULL,
    EndDate DATETIME NOT NULL,
    PickupLocation VARCHAR(100) NOT NULL,
    DropoffLocation VARCHAR(100) NOT NULL,
    AccessoryID INT,
    TotalPrice DECIMAL(10,2),
    CommissionRate DECIMAL(5,2),
    CommissionAmount DECIMAL(10,2),
    OwnerEarning DECIMAL(10,2),
    PaidOut BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (UserID) REFERENCES User(UserID),
    FOREIGN KEY (VehicleID) REFERENCES Vehicle(VehicleID),
    FOREIGN KEY (ChauffeurID) REFERENCES Chauffeur(ChauffeurID),
    FOREIGN KEY (AccessoryID) REFERENCES Accessory(AccessoryID),
    CHECK (
        (LicenseID IS NOT NULL AND ChauffeurID IS NULL) OR 
        (ChauffeurID IS NOT NULL AND LicenseID IS NULL)
    )
);


CREATE TABLE Notification (
    NotificationID INT AUTO_INCREMENT PRIMARY KEY,
    UserID INT,
    Type VARCHAR(50) NOT NULL,
    Content TEXT NOT NULL,
    Status VARCHAR(20) NOT NULL,
    FOREIGN KEY (UserID) REFERENCES User(UserID)
);


CREATE TABLE Payment (
    PaymentID INT AUTO_INCREMENT PRIMARY KEY,
    ReservationID INT,
    Amount FLOAT NOT NULL,
    Status VARCHAR(20) NOT NULL,
    FOREIGN KEY (ReservationID) REFERENCES Reservation(ReservationID)
);

CREATE TABLE Review(
    reviewID INT AUTO_INCREMENT PRIMARY KEY,
    userID INT,
    Stars INT CHECK(Stars>=0 AND Stars<=5),
    Sentence VARCHAR(2000),
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updateAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY(userID) REFERENCES User(UserID)

);


ALTER TABLE User MODIFY Password VARCHAR(255) NULL;
-- Step 1: Insert into Vehicle Table
INSERT INTO Vehicle (Type, Status, Location) 
VALUES ('Car', 'Rented', 'Downtojwn Garage');

-- Step 2: Insert into Car Table (Using LAST_INSERT_ID to get the auto-generated VehicleID)
INSERT INTO Car (VehicleID, Brand, Model, Year, FuelType, Seats) 
VALUES (LAST_INSERT_ID(), 'Toykota', 'Corolla', 2022, 'Petrol', 5);
